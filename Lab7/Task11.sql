USE DVR_MyBase_Test;

SELECT MAX(STUDENT_NUMBERS)[Самая большая группа],
	   MIN(STUDENT_NUMBERS)[Самая маленька группа],
	   AVG(STUDENT_NUMBERS)[Среднее число человек в группе],
	   SUM(STUDENT_NUMBERS)[Суммарное число человек в группах],
	   COUNT(*)[Количество групп]
FROM GROUPS;

SELECT *
FROM (select
		case 
			when EXPERIENCE between 0 and 2 then '0-2'
			when EXPERIENCE between 3 and 7 then '3-7'
			else '>7'
		end [Опыт(г)], count(*)[Количество]
	  from TEACHER group by
		case 
			when EXPERIENCE between 0 and 2 then '0-2'
			when EXPERIENCE between 3 and 7 then '3-7'
			else '>7'
		end
	  ) AS T
ORDER BY CASE[Опыт(г)]
		 WHEN '0-2' THEN 1
		 WHEN '3-7' THEN 2
		 WHEN '>7' THEN 3
		 ELSE 0
		 END;

-- ROLLUP
SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY ROLLUP(SPECIALTY);

-- CUBE
SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY SPECIALTY, STUDENT_NUMBERS WITH CUBE;

-- UNION
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY ROLLUP(SPECIALTY))
	UNION
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY SPECIALTY, STUDENT_NUMBERS WITH CUBE);

-- UNION ALL
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY ROLLUP(SPECIALTY))
	UNION ALL
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY SPECIALTY, STUDENT_NUMBERS WITH CUBE);

-- INTERSECT
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY ROLLUP(SPECIALTY))
	INTERSECT
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY SPECIALTY, STUDENT_NUMBERS WITH CUBE);

-- EXCEPT
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY ROLLUP(SPECIALTY))
	EXCEPT
(SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY SPECIALTY, STUDENT_NUMBERS WITH CUBE);

-- HAVING
SELECT SPECIALTY, SUM(STUDENT_NUMBERS)[Количество студентов]
FROM GROUPS GROUP BY SPECIALTY
HAVING SUM(STUDENT_NUMBERS) > 30;

